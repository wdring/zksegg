"use strict";const ETHDIV=1e18,CHAINID=280;let PROVIDER;window.ethereum?(PROVIDER=new ethers.providers.Web3Provider(window.ethereum),async function(){280!=(await PROVIDER.getNetwork()).chainId&&(alert("Network is not ARB. Requesting to change network"),await window.ethereum.request({method:"wallet_addEthereumChain",params:[{chainId:"280",rpcUrls:["https://testnet.era.zksync.dev"]}]}))}()):PROVIDER=new ethers.providers.JsonRpcProvider("https://testnet.era.zksync.dev",{name:"bnbtestnet",chainId:280});const SIGNER=PROVIDER.getSigner(),ADRS={},ABIS={};ADRS.web3="0xb6109F714bc403Ebd2A4e99595Af72559425aC46",ADRS.factory="0xf2FD2bc2fBC12842aAb6FbB8b1159a6a83E72006",ADRS.router="0xB3b7fCbb8Db37bC6f572634299A58f51622A847e",ADRS.chef="0x617F6774C02ee955004dE9AF46a31207267FaF7E",ADRS.pairweth="0x7Fc10D69dcB205EF733AC041eA3E3934a3A089fB",ADRS.weth="0x20b28b1e4665fff290650586ad76e977eab90c5d",ADRS.zif="0x36e540644b8499A1F00dDc660d5E1C79025E7777",ABIS.web3=["function name() view returns (string)","function symbol() view returns (string)","function totalSupply() view returns (uint256)","function balanceOf(address) view returns (uint256)","function balanceOfUnderlying(address) view returns (uint256)","function transfer(address to, uint amount)","event Transfer(address indexed from, address indexed to, uint amount)","function ZKSEGGToFragment(uint256) view returns (uint256)"],ABIS.factory=["function getPair(address tokenA, address tokenB) view returns (address pair)"],ABIS.router=["function getAmountsOut(uint, address[]) view returns (uint[])","function swapExactETHForTokens(uint, address[], address, uint) payable returns (uint[])"],ABIS.chef=["function totalStaked() view returns (uint256)","function rewardPerBlock() view returns (uint256)","function totalAllocPoint() view returns (uint256)","function poolInfo(uint256) view returns (address, uint256, uint256, uint256)","function pendingReward(uint256, address) view returns (uint256)","function deposit(uint256, uint256)","function withdraw(uint256, uint256)","function claim(uint256, address)","function userInfo(uint256, address) view returns (uint256, uint256, uint256, uint256)","function correctTotalStaked()","function rebaseManual()"];const CONTS={},SIGNS={};for(let e in ABIS)CONTS[e]=new ethers.Contract(ADRS[e],ABIS[e],PROVIDER),SIGNS[e]=CONTS[e].connect(SIGNER);ABIS.token=["function name() view returns (string)","function symbol() view returns (string)","function totalSupply() view returns (uint256)","function balanceOf(address) view returns (uint)","function transfer(address to, uint amount)","event Transfer(address indexed from, address indexed to, uint amount)"];for(let e of["weth"])CONTS[e]=new ethers.Contract(ADRS[e],ABIS.token,PROVIDER),SIGNS[e]=CONTS[e].connect(SIGNER);ABIS.pair=["function token0() view returns (address)","function getReserves() view returns (uint112 reserve0, uint112 reserve1)","function approve(address, uint256)","function allowance(address, address) view returns (uint256)","function totalSupply() view returns (uint256)","function balanceOf(address) view returns (uint)"];for(let e of["weth"])CONTS[`pair${e}`]=new ethers.Contract(ADRS[`pair${e}`],ABIS.pair,PROVIDER),SIGNS[`pair${e}`]=CONTS[`pair${e}`].connect(SIGNER);let CURBLOCK;function INT(e){return parseInt(e)}function STR(e){return String(e)}function ROUND(e,t=0){return e.toFixed(t)}function BNB(e,t=4){return ROUND((e=INT(e))/ETHDIV,t)}function WRAP(e){return"["+e+"]"}function COMMA(e){return e.toString().replace(/\B(?=(\d{3})+(?!\d))/g,",")}function SHORTADR(e){return e.slice(0,6)+".."+e.slice(-4)}function KEYS(e){return Object.keys(e)}function ADELAY(e){return new Promise(t=>setTimeout(t,e))}function DELAY(e){for(var t=(new Date).getTime(),n=0;n-t<e;)n=(new Date).getTime()}function HREF(e,t){return`<a href="${e}">${t}</a>`}function makeElem(e,t=null,n=null){let a=document.createElement(e);return t&&a.setAttribute("id",t),n&&a.setAttribute("class",n),a}(async()=>{CURBLOCK=await PROVIDER.getBlockNumber()})();let nullDiv=makeElem("div","NULL",null);function select(e,t=!1){e=e.trim();let n=[...document.querySelectorAll(e)];return 0==n.length&&(n=[document.querySelector("#NULL")]),t?n:n[0]}function displayText(e,t){let n=select(e,!0);if(null!=n)for(var a=0;a<n.length;a++)n[a].innerHTML=t}function setCookie(e,t,n){let a=new Date;a.setTime(a.getTime()+24*n*60*60*1e3);const i="expires="+a.toUTCString();document.cookie=e+"="+t+"; "+i+"; path=/"}function getCookie(e){let t=null;if(document.cookie&&""!==document.cookie){const n=document.cookie.split(";");for(let a=0;a<n.length;a++){const i=n[a].trim();if(i.substring(0,e.length+1)===e+"="){t=decodeURIComponent(i.substring(e.length+1));break}}}return t}function copy(e){const t=document.createElement("textarea");if(t.value=e,document.body.appendChild(t),navigator.userAgent.match(/ipad|iphone/i)){var n=t.contentEditable,a=t.readOnly;t.contentEditable=!0,t.readOnly=!1;var i=document.createRange();i.selectNodeContents(t);var r=window.getSelection();r.removeAllRanges(),r.addRange(i),t.setSelectionRange(0,999999),t.contentEditable=n,t.readOnly=a}else t.select();document.execCommand("copy"),document.body.removeChild(t)}function swapComma(e,t){var n=$("#"+e);0!=t?n.on("keyup",function(e){if(""===window.getSelection().toString()&&-1===$.inArray(e.keyCode,[38,40,37,39])){var t,n=$(this);t=(t=(t=n.val()).replace(/[\D\s\._\-]+/g,""))?parseInt(t,10):0,n.val(function(){return 0===t?"":t.toLocaleString("en-US")})}}):n.off("keyup")}nullDiv.style.width="1px",nullDiv.style.display="none",document.body.append(nullDiv);let inputHandlerBuy=function(e){!async function(){valueIn=e.target.value,valueIn=valueIn.replace(/,/g,""),result=select("#buy-output"),0!=valueIn?(valueIn=ethers.utils.parseEther(valueIn),valueOut=valueIn.mul(333e4),valueOut_=ethers.utils.formatEther(valueOut),valueOut_=parseInt(valueOut_),valueOut_=numberWithCommas(valueOut_),result.value=valueOut_):result.value=0}()};function BSC(e,t){return`https://bscscan.com/${e}/${t}`}function BIG(e,t=18){return 18==t?ethers.utils.parseEther(e):ethers.utils.parseUnits(e,t)}function ETH(e,t=18){return 18==t?ethers.utils.formatEther(e):ethers.utils.formatUnits(e,t)}function ADR(e){let t;try{t=ethers.utils.getAddress(e)}catch(t){return alert("Wrong Format Address: ["+e+"]"),""}return t}async function getBalance(e){return await PROVIDER.getBalance(e)}const getEthPrice=async()=>{try{const e=await fetch("https://min-api.cryptocompare.com/data/price?fsym=ETH&tsyms=USD");return(await e.json()).USD}catch(e){return console.log(e),null}};async function getPrice(e){return 2e3}getEthPrice().then(e=>{if(e)return e;console.log("Failed to get ETH price")});let buyTxhashData,CURADR=null;async function getCurAdr(){try{CURADR=await SIGNER.getAddress()}catch(e){console.log("not connected yet"),CURADR=null}}function displayAccountInformation(){displayText(".connect-wallet",SHORTADR(CURADR)),getBalance(CURADR).then(e=>{displayText("#balance-number",BNB(e,4))})}async function handleAccountsChanged(e){if(0!=e.length){if(0==e.length)return console.log("no acount"),void(CURADR=null);CURADR=ADR(e[0]),displayAccountInformation()}else displayText("connectResult","Please Connect Metamask")}async function conn(e=null,t=!1){try{let n=await ethereum.request({method:"eth_requestAccounts"});await handleAccountsChanged(n),await doAfterConnect(),null!=e&&await e()}catch(e){if("ReferenceError: ethereum is not defined"==e)return void alert("Use Dapp to connect wallet!");console.log(e),"message"in e&&(e=e.message),t&&alert(JSON.stringify(e))}}async function doAfterConnect(){}function handleChainChanged(e){window.location.reload()}async function ERR(e){let t=e;if(!("code"in e))return console.log("no code",e),t;if(-32603==e.code){if(!("data"in e))return console.log("no data",e),t;let n=e.data;if(!("code"in n))return console.log("no code data",e),t;if(3==n.code)return msg=n.message,t=msg;if(-32e3==n.code)return msg=n.message,t=msg}return t}async function SIGN(e,t,n=!1){return 1==n&&(t=ethers.utils.arrayify(t)),await SIGNS[e].signMessage(t)}async function SEND_ETH(e=ADRS.fund,t=ADRS.fund,n="0.0"){const a={from:e,to:t,value:BIG(n)};try{let e=await SIGNER.sendTransaction(a);return console.log("result",e),[!1,e]}catch(e){return[!0,e=await ERR(e)]}}async function READ_TX(e,t,n,a="0xe7F0704b198585B8777abe859C3126f57eB8C989"){const i={from:a};try{let a=await CONTS[e][t](...n,i);return console.log("result",a),[!1,a]}catch(e){return[!0,e=await ERR(e)]}}async function GAS(e,t,n,a=null){let i,r={};null!=a&&(r.value=BIG(a));try{return[!1,i=await SIGNS[e].estimateGas[t](...n,r)]}catch(e){return[!0,i=await ERR(e)]}}async function SEND_TX(e,t,n,a=null,i=!0){let r={};if(null!=a&&(r.value=BIG(a)),1==i){let[i,o]=await GAS(e,t,n,a);if(1==i)return console.log(i),[!0,o];r.gasLimit=INT(1.2*o)}try{let a;return a=await SIGNS[e][t](...n,r),await a.wait()&&(getData(),await updataData_dashbord(),await updateData_staked(),await updateData_stakedlp(),await updateData_approve()),[!1,a]}catch(e){return[!0,e=await ERR(e)]}}async function privateBuy(){let e=select("#buy-input").value,{res:t,data:n}=await SEND_ETH(CURADR,ADRS.fund,e);if(1==t)return[!0,n];select("#buy-result").innerHTML="Success",select("#buy-txhash").innerHTML=HREF(BSC("tx",n.hash),SHORTADR(n.hash)),buyTxhashData=n.hash}async function updataData_dashbord(){let e=await CONTS.web3.totalSupply()/ETHDIV,t=await CONTS.web3.balanceOfUnderlying(ADRS.chef),n=await CONTS.web3.balanceOf(ADRS.zif),a=e,i=price*a;displayText("#cirSupply",`${COMMA(ROUND(a,2))}`),displayText("#stakedRate",`$${COMMA(ROUND(t/1e24/a*100,2))}%`),displayText("#zif",`${COMMA(ROUND(n/ETHDIV,2))}`),displayText("#mcap",`$${COMMA(ROUND(i),2)}`)}async function updateData_approve(){await CONTS.pairweth.allowance(CURADR,ADRS.chef)>0?select("#approve").style.display="none":select("#stakelp").style.display="none"}async function updateData_staked(){balance=await CONTS.web3.balanceOf(CURADR),balance/=ETHDIV;let e=await CONTS.chef.userInfo(0,CURADR);stakedAmount=e[0],a=e[3],displayText("#staked",`${COMMA(ROUND(Number(stakedAmount*a/1e24/ETHDIV),2))}`),displayText("#stakedInUsd",`$${COMMA(ROUND(Number(stakedAmount*a/1e24/ETHDIV*price),2))}`);let t=await CONTS.chef.pendingReward(0,CURADR);displayText("#pending",`${COMMA(INT(t/=ETHDIV,3))}`),displayText("#balance",`${COMMA(INT(balance,3))} $zEGG`),displayText("#balanceInUsd",`$${COMMA(INT(balance*price,3))}`)}async function updateData_stakedlp(){balancelp=await CONTS.pairweth.balanceOf(CURADR),balancelp/=ETHDIV;let e=await CONTS.chef.userInfo(1,CURADR);stakedlpAmount=e[0],displayText("#stakedlp",`${COMMA(ROUND(Number(stakedlpAmount/ETHDIV),2))} $LPs`),displayText("#balancelp",`${COMMA(INT(balancelp,2))} $LPs`),displayText("#balancelpInUsd",`$${COMMA(ROUND(await CONTS.web3.balanceOf(ADRS.pairweth)/await CONTS.pairweth.totalSupply()*balance*price,2))}`),updateData_approve();let t=await CONTS.chef.pendingReward(1,CURADR);displayText("#pendinglp",`${COMMA(INT(t/=ETHDIV,3))}`)}async function getData(){ethPrice=await getEthPrice(),totalSupply=await CONTS.web3.totalSupply()/ETHDIV,balanceOfchef=await CONTS.web3.balanceOf(ADRS.chef);let e=await CONTS.pairweth.getReserves();if(price=e[0]/e[1]*ethPrice,displayText("#price",`$${COMMA(ROUND(price,10))}`),await getCurAdr(),null==CURADR)return;await doAfterConnect();let t=await CONTS.chef.rewardPerBlock(),n=await CONTS.chef.totalAllocPoint(),a=(await CONTS.chef.poolInfo(0))[1],i=await CONTS.web3.balanceOf(ADRS.chef),r=t/i*a/n,o=7200*r*100;displayText("#apy",`${COMMA(ROUND(2628e3*r*100,2))}%`),displayText("#dailyroi",`Daily ROI ${COMMA(ROUND(o,2))}%`);let c=(await CONTS.chef.poolInfo(1))[1],u=await CONTS.pairweth.balanceOf(ADRS.chef);u*=await CONTS.web3.balanceOf(ADRS.pairweth)/await CONTS.pairweth.totalSupply();let s=t/i*c/n,l=7200*s*100;displayText("#apylp",`${COMMA(ROUND(2628e3*s*100,2))}%`),displayText("#dailyroilp",`Daily ROI ${COMMA(ROUND(l,2))}%`),await updateData_approve()}async function stake(e){e=(e=(e*=1e18).toLocaleString()).toString().replace(/\$|,/g,""),await SEND_TX("chef","deposit",[0,e])}async function withdraw(e){e=(e=(e=(e*=1e18)/a*1e24).toLocaleString()).toString().replace(/\$|,/g,""),await SEND_TX("chef","withdraw",[0,e])}async function claim(e){await SEND_TX("chef","claim",[0,e])}async function stakelp(e){e=(e=(e*=1e18).toLocaleString()).toString().replace(/\$|,/g,""),await SEND_TX("chef","deposit",[1,e])}async function withdrawlp(e){e=(e=(e*=1e18).toLocaleString()).toString().replace(/\$|,/g,""),await SEND_TX("chef","withdraw",[1,e])}async function claimlp(e){await SEND_TX("chef","claim",[1,e])}async function approve(){await SEND_TX("pairweth","approve",[ADRS.chef,"115792089237316195423570985008687907853269984665640564039457584007913129639935"])}async function doAfterConnect(){displayText("#connect",SHORTADR(CURADR)),await updataData_dashbord(),await updateData_staked(),await updateData_stakedlp()}async function rebase(){await SEND_TX("chef","rebaseManual",[])}async function correct(){await SEND_TX("chef","correctTotalStaked",[])}(async()=>{window.ethereum&&(ethereum.on("chainChanged",handleChainChanged),ethereum.on("accountsChanged",handleAccountsChanged))})();
